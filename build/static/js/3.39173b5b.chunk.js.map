{"version":3,"sources":["../node_modules/process/browser.js","../node_modules/@react-hook/latest/dist/module/index.js","../node_modules/@react-hook/event/dist/module/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@react-hook/passive-layout-effect/dist/module/index.js","../node_modules/masonic/dist/module/use-force-update.js","../node_modules/trie-memoize/dist/module/index.js","../node_modules/masonic/dist/module/elements-cache.js","../node_modules/@react-hook/throttle/dist/module/index.js","../node_modules/masonic/dist/module/use-container-position.js","../node_modules/masonic/dist/module/use-positioner.js","../node_modules/masonic/dist/module/interval-tree.js","../node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js","../node_modules/webpack/buildin/global.js","../node_modules/masonic/dist/module/use-scroll-to-index.js","../node_modules/masonic/dist/module/masonry-scroller.js","../node_modules/masonic/dist/module/use-masonry.js","../node_modules/@essentials/memoize-one/dist/module/index.js","../node_modules/date-fns/esm/startOfDay/index.js","../node_modules/@react-hook/window-scroll/dist/module/index.js","../node_modules/@essentials/raf/dist/module/index.js","../node_modules/@essentials/request-timeout/dist/module/index.js","../node_modules/masonic/dist/module/use-scroller.js","../node_modules/raf-schd/dist/raf-schd.esm.js","../node_modules/masonic/dist/module/use-resize-observer.js","../node_modules/@react-hook/debounce/dist/module/index.js","../node_modules/@react-hook/window-size/dist/module/index.js","../node_modules/@essentials/one-key-map/dist/module/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/masonic/dist/module/masonry.js","../node_modules/date-fns/esm/isFuture/index.js","../node_modules/date-fns/esm/subDays/index.js","../node_modules/date-fns/esm/subMonths/index.js","../node_modules/date-fns/esm/sub/index.js","../node_modules/date-fns/esm/differenceInCalendarDays/index.js","../node_modules/date-fns/esm/differenceInDays/index.js"],"names":["cachedSetTimeout","cachedClearTimeout","process","module","exports","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","e","call","this","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","noop","nextTick","args","Array","arguments","i","push","prototype","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","useLatest","current","storedValue","React","useEvent","target","type","listener","cleanup","storedListener","storedCleanup","useLayoutEffect","targetEl","didUnsubscribe","addEventListener","removeEventListener","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","_objectSpread2","source","forEach","getOwnPropertyDescriptors","defineProperties","usePassiveLayoutEffect","document","createElement","useForceUpdate","setState","emptyObj","createCache","cache","set","k","v","get","memoize","mapConstructors","fn","item","constructors","base","map","node","depth","baseCache","one","g","s","memo","elementsCache","WeakMap","perf","performance","Date","now","useThrottleCallback","callback","fps","leading","storedCallback","ms","prev","trailingTimeout","clearTrailing","deps","_ref","rightNow","useThrottle","initialState","state","useContainerPosition","elementRef","emptyArr","offset","width","containerPosition","setContainerPosition","el","offsetTop","offsetParent","offsetWidth","usePositioner","columnWidth","columnGutter","columnCount","initPositioner","getColumns","computedColumnWidth","computedColumnCount","createPositioner","positionerRef","undefined","prevDeps","opts","prevOpts","optsChanged","every","prevPositioner","positioner","cacheSize","size","index","pos","height","intervalTree","createIntervalTree","columnHeights","items","columnItems","column","top","left","insert","update","updates","columns","j","remove","Math","min","itemsInColumn","startIndex","binarySearch","startItem","range","lo","hi","renderCallback","search","estimateHeight","itemCount","defaultItemHeight","tallestColumn","max","ceil","shortestColumn","a","y","l","h","m","x","minimumWidth","gutter","floor","NULL_NODE","low","high","C","P","R","L","list","updateMax","updateMaxUp","rotateLeft","tree","root","rotateRight","replaceNode","indexMap","treeNode","prevNode","next","addInterval","z","fixInsert","intervalResult","removeInterval","originalYColor","minimumTree","w","fixRemove","stack","pop","curr","MapShim","Map","getIndex","arr","result","some","entry","class_1","__entries__","delete","entries","splice","has","clear","ctx","_i","_a","isBrowser","window","global$1","global","self","Function","requestAnimationFrame$1","requestAnimationFrame","bind","transitionKeys","mutationObserverSupported","MutationObserver","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","delay","leadingCall","trailingCall","lastCallTime","resolvePending","proxy","timeoutCallback","timeStamp","throttle","addObserver","observer","indexOf","connect_","removeObserver","observers","disconnect_","updateObservers_","activeObservers","gatherActive","hasActive","broadcastActive","observe","attributes","childList","characterData","subtree","disconnect","_b","propertyName","getInstance","instance_","defineConfigurable","props","getWindowOf","ownerDocument","defaultView","emptyRect","createRectInit","toFloat","parseFloat","getBordersSize","styles","positions","reduce","position","getHTMLElementContentRect","clientWidth","clientHeight","getComputedStyle","paddings","positions_1","getPaddings","horizPad","right","vertPad","bottom","boxSizing","round","documentElement","isDocumentElement","vertScrollbar","horizScrollbar","abs","isSVGGraphicsElement","SVGGraphicsElement","SVGElement","getBBox","getContentRect","bbox","getSVGContentRect","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","rect","broadcastRect","ResizeObserverEntry","rectInit","contentRect","Constr","DOMRectReadOnly","create","createReadOnlyRect","ResizeObserverSPI","controller","callbackCtx","activeObservations_","observations_","TypeError","callback_","controller_","callbackCtx_","Element","observations","unobserve","clearActive","_this","observation","ResizeObserver","method","useScrollToIndex","options","_latestOptions$curren","align","element","innerHeight","latestOptions","getTarget","latestElement","action","_action$value","nextState","prevTop","defaultState","dispatch","throttledDispatch","currentTop","scrollTop","scrollTo","estimatedTop","MasonryScroller","useScroller","scrollFps","isScrolling","useMasonry","resizeObserver","onRender","as","id","className","style","role","tabIndex","containerRef","itemAs","itemStyle","itemHeightEstimate","itemKey","overscanBy","render","__reactCreateElement__","stopIndex","ContainerComponent","ItemComponent","defaultGetItemKey","RenderComponent","forceUpdate","setItemRef","getRefSetter","measuredCount","shortestColumnSize","children","itemRole","storedOnRender","rangeEnd","needsFreshBatch","data","phaseTwoStyle","writingMode","ref","assign","createRenderElement","batchSize","phaseOneStyle","getCachedSize","didEverMount","containerStyle","getContainerStyle","assignUserStyle","trieMemoize","OneKeyMap","memoizeOne","maxWidth","maxHeight","willChange","pointerEvents","cmp2","pargs","userStyle","_","zIndex","visibility","offsetHeight","memoOne","areEqual","equal","defaultAreEqual","startOfDay","dirtyDate","requiredArgs","date","toDate","setHours","win","getScrollY","scrollY","pageYOffset","useWindowScroll","u","p","af","Caf","Raf","raf","caf","lastTime","clearRequestTimeout","handle","requestTimeout","start","loop","useScrollPosition","setIsScrolling","didMount","to","rafSchd","lastArgs","frameId","wrapperFn","_len","_key","cancel","cancelAnimationFrame","useResizeObserver","createResizeObserver","updater","handleEntries","ro","useDebounceCallback","wait","_ref2","useDebounce","getSize","useWindowSize","initialWidth","initialHeight","setDebouncedSize","setSize","val","instance","Constructor","Masonry","windowSize","ssrWidth","ssrHeight","containerPos","nextProps","scrollToIndex","isFuture","getTime","subDays","dirtyAmount","amount","toInteger","addDays","subMonths","addMonths","sub","duration","NaN","years","months","weeks","days","hours","minutes","seconds","dateWithoutMonths","dateWithoutDays","minutestoSub","secondstoSub","mstoSub","finalDate","MILLISECONDS_IN_DAY","differenceInCalendarDays","dirtyDateLeft","dirtyDateRight","startOfDayLeft","startOfDayRight","timestampLeft","getTimezoneOffsetInMilliseconds","timestampRight","compareLocalAsc","dateLeft","dateRight","diff","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","differenceInDays","sign","difference","setDate","isLastDayNotFull"],"mappings":"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","file":"static/js/3.39173b5b.chunk.js","sourcesContent":["// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","import * as React from 'react';\n\nconst useLatest = current => {\n  const storedValue = React.useRef(current);\n  React.useEffect(() => {\n    storedValue.current = current;\n  });\n  return storedValue;\n};\n\nexport default useLatest;","import * as React from 'react';\nimport useLayoutEffect from '@react-hook/passive-layout-effect';\n\nfunction useEvent(target, type, listener, cleanup) {\n  const storedListener = React.useRef(listener);\n  const storedCleanup = React.useRef(cleanup);\n  useLayoutEffect(() => {\n    storedListener.current = listener;\n    storedCleanup.current = cleanup;\n  });\n  useLayoutEffect(() => {\n    const targetEl = target && 'current' in target ? target.current : target;\n    if (!targetEl) return;\n    let didUnsubscribe = 0;\n\n    function listener(...args) {\n      if (didUnsubscribe) return;\n      storedListener.current.apply(this, args);\n    }\n\n    targetEl.addEventListener(type, listener);\n    const cleanup = storedCleanup.current;\n    return () => {\n      didUnsubscribe = 1;\n      targetEl.removeEventListener(type, listener);\n      cleanup && cleanup();\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [target, type]);\n}\n\nexport default useEvent;","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import React from 'react';\nconst usePassiveLayoutEffect = React[typeof document !== 'undefined' && document.createElement !== void 0 ? 'useLayoutEffect' : 'useEffect'];\nexport default usePassiveLayoutEffect;","import * as React from 'react';\nexport function useForceUpdate() {\n  const setState = React.useState(emptyObj)[1];\n  return React.useRef(() => setState({})).current;\n}\nconst emptyObj = {};","const createCache = obj => {\n  try {\n    // @ts-ignore\n    return new obj();\n  } catch (e) {\n    const cache = {};\n    return {\n      set(k, v) {\n        cache[k] = v;\n      },\n\n      get(k) {\n        return cache[k];\n      }\n\n    };\n  }\n};\n\nconst memo = constructors => {\n  const depth = constructors.length,\n        baseCache = createCache(constructors[0]);\n  let base;\n  let map;\n  let i;\n  let node;\n  const one = depth === 1; // quicker access for one and two-argument functions\n\n  const g1 = args => (base = baseCache.get(args[0])) === void 0 || one ? base : base.get(args[1]);\n\n  const s1 = (args, value) => {\n    if (one) baseCache.set(args[0], value);else {\n      if ((base = baseCache.get(args[0])) === void 0) {\n        map = createCache(constructors[1]);\n        map.set(args[1], value);\n        baseCache.set(args[0], map);\n      } else {\n        base.set(args[1], value);\n      }\n    }\n    return value;\n  };\n\n  const g2 = args => {\n    node = baseCache;\n\n    for (i = 0; i < depth; i++) if ((node = node.get(args[i])) === void 0) return;\n\n    return node;\n  };\n\n  const s2 = (args, value) => {\n    node = baseCache;\n\n    for (i = 0; i < depth - 1; i++) {\n      if ((map = node.get(args[i])) === void 0) {\n        map = createCache(constructors[i + 1]);\n        node.set(args[i], map);\n        node = map;\n      } else {\n        node = map;\n      }\n    }\n\n    node.set(args[depth - 1], value);\n    return value;\n  };\n\n  return depth < 3 ? {\n    g: g1,\n    s: s1\n  } : {\n    g: g2,\n    s: s2\n  };\n};\n\nconst memoize = (mapConstructors, fn) => {\n  let item;\n  const {\n    g,\n    s\n  } = memo(mapConstructors);\n  return function () {\n    return (item = g(arguments)) === void 0 ? s(arguments, fn.apply(null, arguments)) : item;\n  };\n};\n\nexport default memoize;","export const elementsCache = /*#__PURE__*/new WeakMap();","import * as React from 'react';\nimport useLatest from '@react-hook/latest';\nconst perf = typeof performance !== 'undefined' ? performance : Date;\n\nconst now = () => perf.now();\n\nexport function useThrottleCallback(callback, fps = 30, leading = false) {\n  const storedCallback = useLatest(callback);\n  const ms = 1000 / fps;\n  const prev = React.useRef(0);\n  const trailingTimeout = React.useRef();\n\n  const clearTrailing = () => trailingTimeout.current && clearTimeout(trailingTimeout.current);\n\n  const deps = [fps, leading, storedCallback]; // Reset any time the deps change\n\n  function _ref() {\n    prev.current = 0;\n    clearTrailing();\n  }\n\n  React.useEffect(() => _ref, deps);\n  return React.useCallback(function () {\n    // eslint-disable-next-line prefer-rest-params\n    const args = arguments;\n    const rightNow = now();\n\n    const call = () => {\n      prev.current = rightNow;\n      clearTrailing();\n      storedCallback.current.apply(null, args);\n    };\n\n    const current = prev.current; // leading\n\n    if (leading && current === 0) return call(); // body\n\n    if (rightNow - current > ms) {\n      if (current > 0) return call();\n      prev.current = rightNow;\n    } // trailing\n\n\n    clearTrailing();\n    trailingTimeout.current = setTimeout(() => {\n      call();\n      prev.current = 0;\n    }, ms);\n  }, deps);\n}\nexport function useThrottle(initialState, fps, leading) {\n  const state = React.useState(initialState);\n  return [state[0], useThrottleCallback(state[1], fps, leading)];\n}","import * as React from 'react';\nimport useLayoutEffect from '@react-hook/passive-layout-effect';\n/**\n * A hook for measuring the width of the grid container, as well as its distance\n * from the top of the document. These values are necessary to correctly calculate the number/width\n * of columns to render, as well as the number of rows to render.\n *\n * @param elementRef A `ref` object created by `React.useRef()`. That ref should be provided to the\n *   `containerRef` property in `useMasonry()`.\n * @param deps You can force this hook to recalculate the `offset` and `width` whenever this\n *   dependencies list changes. A common dependencies list might look like `[windowWidth, windowHeight]`,\n *   which would force the hook to recalculate any time the size of the browser `window` changed.\n */\n\nexport function useContainerPosition(elementRef, deps = emptyArr) {\n  const [containerPosition, setContainerPosition] = React.useState({\n    offset: 0,\n    width: 0\n  });\n  useLayoutEffect(() => {\n    const {\n      current\n    } = elementRef;\n\n    if (current !== null) {\n      let offset = 0;\n      let el = current;\n\n      do {\n        offset += el.offsetTop || 0;\n        el = el.offsetParent;\n      } while (el);\n\n      if (offset !== containerPosition.offset || current.offsetWidth !== containerPosition.width) {\n        setContainerPosition({\n          offset,\n          width: current.offsetWidth\n        });\n      }\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, deps);\n  return containerPosition;\n}\nconst emptyArr = [];","import * as React from 'react';\nimport { createIntervalTree } from './interval-tree';\n/**\n * This hook creates the grid cell positioner and cache required by `useMasonry()`. This is\n * the meat of the grid's layout algorithm, determining which cells to render at a given scroll\n * position, as well as where to place new items in the grid.\n *\n * @param options Properties that determine the number of columns in the grid, as well\n *  as their widths.\n * @param deps This hook will create a new positioner, clearing all existing cached positions,\n *  whenever the dependencies in this list change.\n */\n\nexport function usePositioner({\n  width,\n  columnWidth = 200,\n  columnGutter = 0,\n  columnCount\n}, deps = emptyArr) {\n  const initPositioner = () => {\n    const [computedColumnWidth, computedColumnCount] = getColumns(width, columnWidth, columnGutter, columnCount);\n    return createPositioner(computedColumnCount, computedColumnWidth, columnGutter);\n  };\n\n  const positionerRef = React.useRef();\n  if (positionerRef.current === undefined) positionerRef.current = initPositioner();\n  const prevDeps = React.useRef(deps);\n  const opts = [width, columnWidth, columnGutter, columnCount];\n  const prevOpts = React.useRef(opts);\n  const optsChanged = !opts.every((item, i) => prevOpts.current[i] === item);\n\n  if (typeof process !== 'undefined' && process.env.NODE_ENV !== 'production') {\n    if (deps.length !== prevDeps.current.length) {\n      throw new Error('usePositioner(): The length of your dependencies array changed.');\n    }\n  } // Create a new positioner when the dependencies or sizes change\n  // Thanks to https://github.com/khmm12 for pointing this out\n  // https://github.com/jaredLunde/masonic/pull/41\n\n\n  if (optsChanged || !deps.every((item, i) => prevDeps.current[i] === item)) {\n    const prevPositioner = positionerRef.current;\n    const positioner = initPositioner();\n    prevDeps.current = deps;\n    prevOpts.current = opts;\n\n    if (optsChanged) {\n      const cacheSize = prevPositioner.size();\n\n      for (let index = 0; index < cacheSize; index++) {\n        const pos = prevPositioner.get(index);\n        positioner.set(index, pos !== void 0 ? pos.height : 0);\n      }\n    }\n\n    positionerRef.current = positioner;\n  }\n\n  return positionerRef.current;\n}\n\n/**\n * Creates a cell positioner for the `useMasonry()` hook. The `usePositioner()` hook uses\n * this utility under the hood.\n *\n * @param columnCount The number of columns in the grid\n * @param columnWidth The width of each column in the grid\n * @param columnGutter The amount of horizontal and vertical space in pixels to render\n *  between each grid item.\n */\nexport const createPositioner = (columnCount, columnWidth, columnGutter = 0) => {\n  // O(log(n)) lookup of cells to render for a given viewport size\n  // Store tops and bottoms of each cell for fast intersection lookup.\n  const intervalTree = createIntervalTree(); // Track the height of each column.\n  // Layout algorithm below always inserts into the shortest column.\n\n  const columnHeights = new Array(columnCount); // Used for O(1) item access\n\n  const items = []; // Tracks the item indexes within an individual column\n\n  const columnItems = new Array(columnCount);\n\n  for (let i = 0; i < columnCount; i++) {\n    columnHeights[i] = 0;\n    columnItems[i] = [];\n  }\n\n  return {\n    columnCount,\n    columnWidth,\n    set: (index, height = 0) => {\n      let column = 0; // finds the shortest column and uses it\n\n      for (let i = 1; i < columnHeights.length; i++) {\n        if (columnHeights[i] < columnHeights[column]) column = i;\n      }\n\n      const top = columnHeights[column] || 0;\n      columnHeights[column] = top + height + columnGutter;\n      columnItems[column].push(index);\n      items[index] = {\n        left: column * (columnWidth + columnGutter),\n        top,\n        height,\n        column\n      };\n      intervalTree.insert(top, top + height, index);\n    },\n    get: index => items[index],\n    // This only updates items in the specific columns that have changed, on and after the\n    // specific items that have changed\n    update: updates => {\n      const columns = new Array(columnCount);\n      let i = 0,\n          j = 0; // determines which columns have items that changed, as well as the minimum index\n      // changed in that column, as all items after that index will have their positions\n      // affected by the change\n\n      for (; i < updates.length - 1; i++) {\n        const index = updates[i];\n        const item = items[index];\n        item.height = updates[++i];\n        intervalTree.remove(index);\n        intervalTree.insert(item.top, item.top + item.height, index);\n        columns[item.column] = columns[item.column] === void 0 ? index : Math.min(index, columns[item.column]);\n      }\n\n      for (i = 0; i < columns.length; i++) {\n        // bails out if the column didn't change\n        if (columns[i] === void 0) continue;\n        const itemsInColumn = columnItems[i]; // the index order is sorted with certainty so binary search is a great solution\n        // here as opposed to Array.indexOf()\n\n        const startIndex = binarySearch(itemsInColumn, columns[i]);\n        const index = columnItems[i][startIndex];\n        const startItem = items[index];\n        columnHeights[i] = startItem.top + startItem.height + columnGutter;\n\n        for (j = startIndex + 1; j < itemsInColumn.length; j++) {\n          const index = itemsInColumn[j];\n          const item = items[index];\n          item.top = columnHeights[i];\n          columnHeights[i] = item.top + item.height + columnGutter;\n          intervalTree.remove(index);\n          intervalTree.insert(item.top, item.top + item.height, index);\n        }\n      }\n    },\n    // Render all cells visible within the viewport range defined.\n    range: (lo, hi, renderCallback) => intervalTree.search(lo, hi, (index, top) => renderCallback(index, items[index].left, top)),\n    estimateHeight: (itemCount, defaultItemHeight) => {\n      const tallestColumn = Math.max(0, Math.max.apply(null, columnHeights));\n      return itemCount === intervalTree.size ? tallestColumn : tallestColumn + Math.ceil((itemCount - intervalTree.size) / columnCount) * defaultItemHeight;\n    },\n    shortestColumn: () => {\n      if (columnHeights.length > 1) return Math.min.apply(null, columnHeights);\n      return columnHeights[0] || 0;\n    },\n\n    size() {\n      return intervalTree.size;\n    }\n\n  };\n};\n\n/* istanbul ignore next */\nconst binarySearch = (a, y) => {\n  let l = 0;\n  let h = a.length - 1;\n\n  while (l <= h) {\n    const m = l + h >>> 1;\n    const x = a[m];\n    if (x === y) return m;else if (x <= y) l = m + 1;else h = m - 1;\n  }\n\n  return -1;\n};\n\nconst getColumns = (width = 0, minimumWidth = 0, gutter = 8, columnCount) => {\n  columnCount = columnCount || Math.floor(width / (minimumWidth + gutter)) || 1;\n  const columnWidth = Math.floor((width - gutter * (columnCount - 1)) / columnCount);\n  return [columnWidth, columnCount];\n};\n\nconst emptyArr = [];","const RED = 0;\nconst BLACK = 1;\nconst NIL = 2;\nconst DELETE = 0;\nconst KEEP = 1;\n\nfunction addInterval(treeNode, high, index) {\n  let node = treeNode.list;\n  let prevNode;\n\n  while (node) {\n    if (node.index === index) return false;\n    if (high > node.high) break;\n    prevNode = node;\n    node = node.next;\n  }\n\n  if (!prevNode) treeNode.list = {\n    index,\n    high,\n    next: node\n  };\n  if (prevNode) prevNode.next = {\n    index,\n    high,\n    next: prevNode.next\n  };\n  return true;\n}\n\nfunction removeInterval(treeNode, index) {\n  let node = treeNode.list;\n\n  if (node.index === index) {\n    if (node.next === null) return DELETE;\n    treeNode.list = node.next;\n    return KEEP;\n  }\n\n  let prevNode = node;\n  node = node.next;\n\n  while (node !== null) {\n    if (node.index === index) {\n      prevNode.next = node.next;\n      return KEEP;\n    }\n\n    prevNode = node;\n    node = node.next;\n  }\n}\n\nconst NULL_NODE = {\n  low: 0,\n  max: 0,\n  high: 0,\n  C: NIL,\n  // @ts-ignore\n  P: undefined,\n  // @ts-ignore\n  R: undefined,\n  // @ts-ignore\n  L: undefined,\n  // @ts-ignore\n  list: undefined\n};\nNULL_NODE.P = NULL_NODE;\nNULL_NODE.L = NULL_NODE;\nNULL_NODE.R = NULL_NODE;\n\nfunction updateMax(node) {\n  const max = node.high;\n  if (node.L === NULL_NODE && node.R === NULL_NODE) node.max = max;else if (node.L === NULL_NODE) node.max = Math.max(node.R.max, max);else if (node.R === NULL_NODE) node.max = Math.max(node.L.max, max);else node.max = Math.max(Math.max(node.L.max, node.R.max), max);\n}\n\nfunction updateMaxUp(node) {\n  let x = node;\n\n  while (x.P !== NULL_NODE) {\n    updateMax(x.P);\n    x = x.P;\n  }\n}\n\nfunction rotateLeft(tree, x) {\n  if (x.R === NULL_NODE) return;\n  const y = x.R;\n  x.R = y.L;\n  if (y.L !== NULL_NODE) y.L.P = x;\n  y.P = x.P;\n  if (x.P === NULL_NODE) tree.root = y;else {\n    if (x === x.P.L) x.P.L = y;else x.P.R = y;\n  }\n  y.L = x;\n  x.P = y;\n  updateMax(x);\n  updateMax(y);\n}\n\nfunction rotateRight(tree, x) {\n  if (x.L === NULL_NODE) return;\n  const y = x.L;\n  x.L = y.R;\n  if (y.R !== NULL_NODE) y.R.P = x;\n  y.P = x.P;\n  if (x.P === NULL_NODE) tree.root = y;else {\n    if (x === x.P.R) x.P.R = y;else x.P.L = y;\n  }\n  y.R = x;\n  x.P = y;\n  updateMax(x);\n  updateMax(y);\n}\n\nfunction replaceNode(tree, x, y) {\n  if (x.P === NULL_NODE) tree.root = y;else if (x === x.P.L) x.P.L = y;else x.P.R = y;\n  y.P = x.P;\n}\n\nfunction fixRemove(tree, x) {\n  let w;\n\n  while (x !== NULL_NODE && x.C === BLACK) {\n    if (x === x.P.L) {\n      w = x.P.R;\n\n      if (w.C === RED) {\n        w.C = BLACK;\n        x.P.C = RED;\n        rotateLeft(tree, x.P);\n        w = x.P.R;\n      }\n\n      if (w.L.C === BLACK && w.R.C === BLACK) {\n        w.C = RED;\n        x = x.P;\n      } else {\n        if (w.R.C === BLACK) {\n          w.L.C = BLACK;\n          w.C = RED;\n          rotateRight(tree, w);\n          w = x.P.R;\n        }\n\n        w.C = x.P.C;\n        x.P.C = BLACK;\n        w.R.C = BLACK;\n        rotateLeft(tree, x.P);\n        x = tree.root;\n      }\n    } else {\n      w = x.P.L;\n\n      if (w.C === RED) {\n        w.C = BLACK;\n        x.P.C = RED;\n        rotateRight(tree, x.P);\n        w = x.P.L;\n      }\n\n      if (w.R.C === BLACK && w.L.C === BLACK) {\n        w.C = RED;\n        x = x.P;\n      } else {\n        if (w.L.C === BLACK) {\n          w.R.C = BLACK;\n          w.C = RED;\n          rotateLeft(tree, w);\n          w = x.P.L;\n        }\n\n        w.C = x.P.C;\n        x.P.C = BLACK;\n        w.L.C = BLACK;\n        rotateRight(tree, x.P);\n        x = tree.root;\n      }\n    }\n  }\n\n  x.C = BLACK;\n}\n\nfunction minimumTree(x) {\n  while (x.L !== NULL_NODE) x = x.L;\n\n  return x;\n}\n\nfunction fixInsert(tree, z) {\n  let y;\n\n  while (z.P.C === RED) {\n    if (z.P === z.P.P.L) {\n      y = z.P.P.R;\n\n      if (y.C === RED) {\n        z.P.C = BLACK;\n        y.C = BLACK;\n        z.P.P.C = RED;\n        z = z.P.P;\n      } else {\n        if (z === z.P.R) {\n          z = z.P;\n          rotateLeft(tree, z);\n        }\n\n        z.P.C = BLACK;\n        z.P.P.C = RED;\n        rotateRight(tree, z.P.P);\n      }\n    } else {\n      y = z.P.P.L;\n\n      if (y.C === RED) {\n        z.P.C = BLACK;\n        y.C = BLACK;\n        z.P.P.C = RED;\n        z = z.P.P;\n      } else {\n        if (z === z.P.L) {\n          z = z.P;\n          rotateRight(tree, z);\n        }\n\n        z.P.C = BLACK;\n        z.P.P.C = RED;\n        rotateLeft(tree, z.P.P);\n      }\n    }\n  }\n\n  tree.root.C = BLACK;\n}\n\nexport function createIntervalTree() {\n  const tree = {\n    root: NULL_NODE,\n    size: 0\n  }; // we know these indexes are a consistent, safe way to make look ups\n  // for our case so it's a solid O(1) alternative to\n  // the O(log n) searchNode() in typical interval trees\n\n  const indexMap = {};\n  return {\n    insert(low, high, index) {\n      let x = tree.root;\n      let y = NULL_NODE;\n\n      while (x !== NULL_NODE) {\n        y = x;\n        if (low === y.low) break;\n        if (low < x.low) x = x.L;else x = x.R;\n      }\n\n      if (low === y.low && y !== NULL_NODE) {\n        if (!addInterval(y, high, index)) return;\n        y.high = Math.max(y.high, high);\n        updateMax(y);\n        updateMaxUp(y);\n        indexMap[index] = y;\n        tree.size++;\n        return;\n      }\n\n      const z = {\n        low,\n        high,\n        max: high,\n        C: RED,\n        P: y,\n        L: NULL_NODE,\n        R: NULL_NODE,\n        list: {\n          index,\n          high,\n          next: null\n        }\n      };\n\n      if (y === NULL_NODE) {\n        tree.root = z;\n      } else {\n        if (z.low < y.low) y.L = z;else y.R = z;\n        updateMaxUp(z);\n      }\n\n      fixInsert(tree, z);\n      indexMap[index] = z;\n      tree.size++;\n    },\n\n    remove(index) {\n      const z = indexMap[index];\n      if (z === void 0) return;\n      delete indexMap[index];\n      const intervalResult = removeInterval(z, index);\n      if (intervalResult === void 0) return;\n\n      if (intervalResult === KEEP) {\n        z.high = z.list.high;\n        updateMax(z);\n        updateMaxUp(z);\n        tree.size--;\n        return;\n      }\n\n      let y = z;\n      let originalYColor = y.C;\n      let x;\n\n      if (z.L === NULL_NODE) {\n        x = z.R;\n        replaceNode(tree, z, z.R);\n      } else if (z.R === NULL_NODE) {\n        x = z.L;\n        replaceNode(tree, z, z.L);\n      } else {\n        y = minimumTree(z.R);\n        originalYColor = y.C;\n        x = y.R;\n\n        if (y.P === z) {\n          x.P = y;\n        } else {\n          replaceNode(tree, y, y.R);\n          y.R = z.R;\n          y.R.P = y;\n        }\n\n        replaceNode(tree, z, y);\n        y.L = z.L;\n        y.L.P = y;\n        y.C = z.C;\n      }\n\n      updateMax(x);\n      updateMaxUp(x);\n      if (originalYColor === BLACK) fixRemove(tree, x);\n      tree.size--;\n    },\n\n    search(low, high, callback) {\n      const stack = [tree.root];\n\n      while (stack.length !== 0) {\n        const node = stack.pop();\n        if (node === NULL_NODE || low > node.max) continue;\n        if (node.L !== NULL_NODE) stack.push(node.L);\n        if (node.R !== NULL_NODE) stack.push(node.R);\n\n        if (node.low <= high && node.high >= low) {\n          let curr = node.list;\n\n          while (curr !== null) {\n            if (curr.high >= low) callback(curr.index, node.low);\n            curr = curr.next;\n          }\n        }\n      }\n    },\n\n    get size() {\n      return tree.size;\n    }\n\n  };\n}","/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\r\n/* eslint-disable require-jsdoc, valid-jsdoc */\r\nvar MapShim = (function () {\r\n    if (typeof Map !== 'undefined') {\r\n        return Map;\r\n    }\r\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\r\n    function getIndex(arr, key) {\r\n        var result = -1;\r\n        arr.some(function (entry, index) {\r\n            if (entry[0] === key) {\r\n                result = index;\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        return result;\r\n    }\r\n    return /** @class */ (function () {\r\n        function class_1() {\r\n            this.__entries__ = [];\r\n        }\r\n        Object.defineProperty(class_1.prototype, \"size\", {\r\n            /**\r\n             * @returns {boolean}\r\n             */\r\n            get: function () {\r\n                return this.__entries__.length;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\r\n        class_1.prototype.get = function (key) {\r\n            var index = getIndex(this.__entries__, key);\r\n            var entry = this.__entries__[index];\r\n            return entry && entry[1];\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.set = function (key, value) {\r\n            var index = getIndex(this.__entries__, key);\r\n            if (~index) {\r\n                this.__entries__[index][1] = value;\r\n            }\r\n            else {\r\n                this.__entries__.push([key, value]);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.delete = function (key) {\r\n            var entries = this.__entries__;\r\n            var index = getIndex(entries, key);\r\n            if (~index) {\r\n                entries.splice(index, 1);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.has = function (key) {\r\n            return !!~getIndex(this.__entries__, key);\r\n        };\r\n        /**\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.clear = function () {\r\n            this.__entries__.splice(0);\r\n        };\r\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.forEach = function (callback, ctx) {\r\n            if (ctx === void 0) { ctx = null; }\r\n            for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {\r\n                var entry = _a[_i];\r\n                callback.call(ctx, entry[1], entry[0]);\r\n            }\r\n        };\r\n        return class_1;\r\n    }());\r\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\r\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\r\nvar global$1 = (function () {\r\n    if (typeof global !== 'undefined' && global.Math === Math) {\r\n        return global;\r\n    }\r\n    if (typeof self !== 'undefined' && self.Math === Math) {\r\n        return self;\r\n    }\r\n    if (typeof window !== 'undefined' && window.Math === Math) {\r\n        return window;\r\n    }\r\n    // eslint-disable-next-line no-new-func\r\n    return Function('return this')();\r\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\r\nvar requestAnimationFrame$1 = (function () {\r\n    if (typeof requestAnimationFrame === 'function') {\r\n        // It's required to use a bounded function because IE sometimes throws\r\n        // an \"Invalid calling object\" error if rAF is invoked without the global\r\n        // object on the left hand side.\r\n        return requestAnimationFrame.bind(global$1);\r\n    }\r\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\r\n})();\n\n// Defines minimum timeout before adding a trailing call.\r\nvar trailingTimeout = 2;\r\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\r\nfunction throttle (callback, delay) {\r\n    var leadingCall = false, trailingCall = false, lastCallTime = 0;\r\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function resolvePending() {\r\n        if (leadingCall) {\r\n            leadingCall = false;\r\n            callback();\r\n        }\r\n        if (trailingCall) {\r\n            proxy();\r\n        }\r\n    }\r\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function timeoutCallback() {\r\n        requestAnimationFrame$1(resolvePending);\r\n    }\r\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function proxy() {\r\n        var timeStamp = Date.now();\r\n        if (leadingCall) {\r\n            // Reject immediately following calls.\r\n            if (timeStamp - lastCallTime < trailingTimeout) {\r\n                return;\r\n            }\r\n            // Schedule new call to be in invoked when the pending one is resolved.\r\n            // This is important for \"transitions\" which never actually start\r\n            // immediately so there is a chance that we might miss one if change\r\n            // happens amids the pending invocation.\r\n            trailingCall = true;\r\n        }\r\n        else {\r\n            leadingCall = true;\r\n            trailingCall = false;\r\n            setTimeout(timeoutCallback, delay);\r\n        }\r\n        lastCallTime = timeStamp;\r\n    }\r\n    return proxy;\r\n}\n\n// Minimum delay before invoking the update of observers.\r\nvar REFRESH_DELAY = 20;\r\n// A list of substrings of CSS properties used to find transition events that\r\n// might affect dimensions of observed elements.\r\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\r\n// Check if MutationObserver is available.\r\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\r\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\r\nvar ResizeObserverController = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserverController.\r\n     *\r\n     * @private\r\n     */\r\n    function ResizeObserverController() {\r\n        /**\r\n         * Indicates whether DOM listeners have been added.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.connected_ = false;\r\n        /**\r\n         * Tells that controller has subscribed for Mutation Events.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.mutationEventsAdded_ = false;\r\n        /**\r\n         * Keeps reference to the instance of MutationObserver.\r\n         *\r\n         * @private {MutationObserver}\r\n         */\r\n        this.mutationsObserver_ = null;\r\n        /**\r\n         * A list of connected observers.\r\n         *\r\n         * @private {Array<ResizeObserverSPI>}\r\n         */\r\n        this.observers_ = [];\r\n        this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\r\n        this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\r\n    }\r\n    /**\r\n     * Adds observer to observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be added.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.addObserver = function (observer) {\r\n        if (!~this.observers_.indexOf(observer)) {\r\n            this.observers_.push(observer);\r\n        }\r\n        // Add listeners if they haven't been added yet.\r\n        if (!this.connected_) {\r\n            this.connect_();\r\n        }\r\n    };\r\n    /**\r\n     * Removes observer from observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.removeObserver = function (observer) {\r\n        var observers = this.observers_;\r\n        var index = observers.indexOf(observer);\r\n        // Remove observer if it's present in registry.\r\n        if (~index) {\r\n            observers.splice(index, 1);\r\n        }\r\n        // Remove listeners if controller has no connected observers.\r\n        if (!observers.length && this.connected_) {\r\n            this.disconnect_();\r\n        }\r\n    };\r\n    /**\r\n     * Invokes the update of observers. It will continue running updates insofar\r\n     * it detects changes.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.refresh = function () {\r\n        var changesDetected = this.updateObservers_();\r\n        // Continue running updates if changes have been detected as there might\r\n        // be future ones caused by CSS transitions.\r\n        if (changesDetected) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Updates every observer from observers list and notifies them of queued\r\n     * entries.\r\n     *\r\n     * @private\r\n     * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n     *      dimensions of it's elements.\r\n     */\r\n    ResizeObserverController.prototype.updateObservers_ = function () {\r\n        // Collect observers that have active observations.\r\n        var activeObservers = this.observers_.filter(function (observer) {\r\n            return observer.gatherActive(), observer.hasActive();\r\n        });\r\n        // Deliver notifications in a separate cycle in order to avoid any\r\n        // collisions between observers, e.g. when multiple instances of\r\n        // ResizeObserver are tracking the same element and the callback of one\r\n        // of them changes content dimensions of the observed target. Sometimes\r\n        // this may result in notifications being blocked for the rest of observers.\r\n        activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\r\n        return activeObservers.length > 0;\r\n    };\r\n    /**\r\n     * Initializes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.connect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already added.\r\n        if (!isBrowser || this.connected_) {\r\n            return;\r\n        }\r\n        // Subscription to the \"Transitionend\" event is used as a workaround for\r\n        // delayed transitions. This way it's possible to capture at least the\r\n        // final state of an element.\r\n        document.addEventListener('transitionend', this.onTransitionEnd_);\r\n        window.addEventListener('resize', this.refresh);\r\n        if (mutationObserverSupported) {\r\n            this.mutationsObserver_ = new MutationObserver(this.refresh);\r\n            this.mutationsObserver_.observe(document, {\r\n                attributes: true,\r\n                childList: true,\r\n                characterData: true,\r\n                subtree: true\r\n            });\r\n        }\r\n        else {\r\n            document.addEventListener('DOMSubtreeModified', this.refresh);\r\n            this.mutationEventsAdded_ = true;\r\n        }\r\n        this.connected_ = true;\r\n    };\r\n    /**\r\n     * Removes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.disconnect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already removed.\r\n        if (!isBrowser || !this.connected_) {\r\n            return;\r\n        }\r\n        document.removeEventListener('transitionend', this.onTransitionEnd_);\r\n        window.removeEventListener('resize', this.refresh);\r\n        if (this.mutationsObserver_) {\r\n            this.mutationsObserver_.disconnect();\r\n        }\r\n        if (this.mutationEventsAdded_) {\r\n            document.removeEventListener('DOMSubtreeModified', this.refresh);\r\n        }\r\n        this.mutationsObserver_ = null;\r\n        this.mutationEventsAdded_ = false;\r\n        this.connected_ = false;\r\n    };\r\n    /**\r\n     * \"Transitionend\" event handler.\r\n     *\r\n     * @private\r\n     * @param {TransitionEvent} event\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {\r\n        var _b = _a.propertyName, propertyName = _b === void 0 ? '' : _b;\r\n        // Detect whether transition may affect dimensions of an element.\r\n        var isReflowProperty = transitionKeys.some(function (key) {\r\n            return !!~propertyName.indexOf(key);\r\n        });\r\n        if (isReflowProperty) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Returns instance of the ResizeObserverController.\r\n     *\r\n     * @returns {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.getInstance = function () {\r\n        if (!this.instance_) {\r\n            this.instance_ = new ResizeObserverController();\r\n        }\r\n        return this.instance_;\r\n    };\r\n    /**\r\n     * Holds reference to the controller's instance.\r\n     *\r\n     * @private {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.instance_ = null;\r\n    return ResizeObserverController;\r\n}());\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\r\nvar defineConfigurable = (function (target, props) {\r\n    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        Object.defineProperty(target, key, {\r\n            value: props[key],\r\n            enumerable: false,\r\n            writable: false,\r\n            configurable: true\r\n        });\r\n    }\r\n    return target;\r\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\r\nvar getWindowOf = (function (target) {\r\n    // Assume that the element is an instance of Node, which means that it\r\n    // has the \"ownerDocument\" property from which we can retrieve a\r\n    // corresponding global object.\r\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\r\n    // Return the local global object if it's not possible extract one from\r\n    // provided element.\r\n    return ownerGlobal || global$1;\r\n});\n\n// Placeholder of an empty content rectangle.\r\nvar emptyRect = createRectInit(0, 0, 0, 0);\r\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\r\nfunction toFloat(value) {\r\n    return parseFloat(value) || 0;\r\n}\r\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\r\nfunction getBordersSize(styles) {\r\n    var positions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        positions[_i - 1] = arguments[_i];\r\n    }\r\n    return positions.reduce(function (size, position) {\r\n        var value = styles['border-' + position + '-width'];\r\n        return size + toFloat(value);\r\n    }, 0);\r\n}\r\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\r\nfunction getPaddings(styles) {\r\n    var positions = ['top', 'right', 'bottom', 'left'];\r\n    var paddings = {};\r\n    for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\r\n        var position = positions_1[_i];\r\n        var value = styles['padding-' + position];\r\n        paddings[position] = toFloat(value);\r\n    }\r\n    return paddings;\r\n}\r\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getSVGContentRect(target) {\r\n    var bbox = target.getBBox();\r\n    return createRectInit(0, 0, bbox.width, bbox.height);\r\n}\r\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getHTMLElementContentRect(target) {\r\n    // Client width & height properties can't be\r\n    // used exclusively as they provide rounded values.\r\n    var clientWidth = target.clientWidth, clientHeight = target.clientHeight;\r\n    // By this condition we can catch all non-replaced inline, hidden and\r\n    // detached elements. Though elements with width & height properties less\r\n    // than 0.5 will be discarded as well.\r\n    //\r\n    // Without it we would need to implement separate methods for each of\r\n    // those cases and it's not possible to perform a precise and performance\r\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\r\n    // gives wrong results for elements with width & height less than 0.5.\r\n    if (!clientWidth && !clientHeight) {\r\n        return emptyRect;\r\n    }\r\n    var styles = getWindowOf(target).getComputedStyle(target);\r\n    var paddings = getPaddings(styles);\r\n    var horizPad = paddings.left + paddings.right;\r\n    var vertPad = paddings.top + paddings.bottom;\r\n    // Computed styles of width & height are being used because they are the\r\n    // only dimensions available to JS that contain non-rounded values. It could\r\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\r\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\r\n    var width = toFloat(styles.width), height = toFloat(styles.height);\r\n    // Width & height include paddings and borders when the 'border-box' box\r\n    // model is applied (except for IE).\r\n    if (styles.boxSizing === 'border-box') {\r\n        // Following conditions are required to handle Internet Explorer which\r\n        // doesn't include paddings and borders to computed CSS dimensions.\r\n        //\r\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\r\n        // properties then it's either IE, and thus we don't need to subtract\r\n        // anything, or an element merely doesn't have paddings/borders styles.\r\n        if (Math.round(width + horizPad) !== clientWidth) {\r\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\r\n        }\r\n        if (Math.round(height + vertPad) !== clientHeight) {\r\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\r\n        }\r\n    }\r\n    // Following steps can't be applied to the document's root element as its\r\n    // client[Width/Height] properties represent viewport area of the window.\r\n    // Besides, it's as well not necessary as the <html> itself neither has\r\n    // rendered scroll bars nor it can be clipped.\r\n    if (!isDocumentElement(target)) {\r\n        // In some browsers (only in Firefox, actually) CSS width & height\r\n        // include scroll bars size which can be removed at this step as scroll\r\n        // bars are the only difference between rounded dimensions + paddings\r\n        // and \"client\" properties, though that is not always true in Chrome.\r\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\r\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\r\n        // Chrome has a rather weird rounding of \"client\" properties.\r\n        // E.g. for an element with content width of 314.2px it sometimes gives\r\n        // the client width of 315px and for the width of 314.7px it may give\r\n        // 314px. And it doesn't happen all the time. So just ignore this delta\r\n        // as a non-relevant.\r\n        if (Math.abs(vertScrollbar) !== 1) {\r\n            width -= vertScrollbar;\r\n        }\r\n        if (Math.abs(horizScrollbar) !== 1) {\r\n            height -= horizScrollbar;\r\n        }\r\n    }\r\n    return createRectInit(paddings.left, paddings.top, width, height);\r\n}\r\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nvar isSVGGraphicsElement = (function () {\r\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\r\n    // interface.\r\n    if (typeof SVGGraphicsElement !== 'undefined') {\r\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\r\n    }\r\n    // If it's so, then check that element is at least an instance of the\r\n    // SVGElement and that it has the \"getBBox\" method.\r\n    // eslint-disable-next-line no-extra-parens\r\n    return function (target) { return (target instanceof getWindowOf(target).SVGElement &&\r\n        typeof target.getBBox === 'function'); };\r\n})();\r\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nfunction isDocumentElement(target) {\r\n    return target === getWindowOf(target).document.documentElement;\r\n}\r\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getContentRect(target) {\r\n    if (!isBrowser) {\r\n        return emptyRect;\r\n    }\r\n    if (isSVGGraphicsElement(target)) {\r\n        return getSVGContentRect(target);\r\n    }\r\n    return getHTMLElementContentRect(target);\r\n}\r\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\r\nfunction createReadOnlyRect(_a) {\r\n    var x = _a.x, y = _a.y, width = _a.width, height = _a.height;\r\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\r\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\r\n    var rect = Object.create(Constr.prototype);\r\n    // Rectangle's properties are not writable and non-enumerable.\r\n    defineConfigurable(rect, {\r\n        x: x, y: y, width: width, height: height,\r\n        top: y,\r\n        right: x + width,\r\n        bottom: height + y,\r\n        left: x\r\n    });\r\n    return rect;\r\n}\r\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction createRectInit(x, y, width, height) {\r\n    return { x: x, y: y, width: width, height: height };\r\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\r\nvar ResizeObservation = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObservation.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     */\r\n    function ResizeObservation(target) {\r\n        /**\r\n         * Broadcasted width of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastWidth = 0;\r\n        /**\r\n         * Broadcasted height of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastHeight = 0;\r\n        /**\r\n         * Reference to the last observed content rectangle.\r\n         *\r\n         * @private {DOMRectInit}\r\n         */\r\n        this.contentRect_ = createRectInit(0, 0, 0, 0);\r\n        this.target = target;\r\n    }\r\n    /**\r\n     * Updates content rectangle and tells whether it's width or height properties\r\n     * have changed since the last broadcast.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObservation.prototype.isActive = function () {\r\n        var rect = getContentRect(this.target);\r\n        this.contentRect_ = rect;\r\n        return (rect.width !== this.broadcastWidth ||\r\n            rect.height !== this.broadcastHeight);\r\n    };\r\n    /**\r\n     * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n     * from the corresponding properties of the last observed content rectangle.\r\n     *\r\n     * @returns {DOMRectInit} Last observed content rectangle.\r\n     */\r\n    ResizeObservation.prototype.broadcastRect = function () {\r\n        var rect = this.contentRect_;\r\n        this.broadcastWidth = rect.width;\r\n        this.broadcastHeight = rect.height;\r\n        return rect;\r\n    };\r\n    return ResizeObservation;\r\n}());\n\nvar ResizeObserverEntry = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObserverEntry.\r\n     *\r\n     * @param {Element} target - Element that is being observed.\r\n     * @param {DOMRectInit} rectInit - Data of the element's content rectangle.\r\n     */\r\n    function ResizeObserverEntry(target, rectInit) {\r\n        var contentRect = createReadOnlyRect(rectInit);\r\n        // According to the specification following properties are not writable\r\n        // and are also not enumerable in the native implementation.\r\n        //\r\n        // Property accessors are not being used as they'd require to define a\r\n        // private WeakMap storage which may cause memory leaks in browsers that\r\n        // don't support this type of collections.\r\n        defineConfigurable(this, { target: target, contentRect: contentRect });\r\n    }\r\n    return ResizeObserverEntry;\r\n}());\n\nvar ResizeObserverSPI = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback function that is invoked\r\n     *      when one of the observed elements changes it's content dimensions.\r\n     * @param {ResizeObserverController} controller - Controller instance which\r\n     *      is responsible for the updates of observer.\r\n     * @param {ResizeObserver} callbackCtx - Reference to the public\r\n     *      ResizeObserver instance which will be passed to callback function.\r\n     */\r\n    function ResizeObserverSPI(callback, controller, callbackCtx) {\r\n        /**\r\n         * Collection of resize observations that have detected changes in dimensions\r\n         * of elements.\r\n         *\r\n         * @private {Array<ResizeObservation>}\r\n         */\r\n        this.activeObservations_ = [];\r\n        /**\r\n         * Registry of the ResizeObservation instances.\r\n         *\r\n         * @private {Map<Element, ResizeObservation>}\r\n         */\r\n        this.observations_ = new MapShim();\r\n        if (typeof callback !== 'function') {\r\n            throw new TypeError('The callback provided as parameter 1 is not a function.');\r\n        }\r\n        this.callback_ = callback;\r\n        this.controller_ = controller;\r\n        this.callbackCtx_ = callbackCtx;\r\n    }\r\n    /**\r\n     * Starts observing provided element.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.observe = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is already being observed.\r\n        if (observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.set(target, new ResizeObservation(target));\r\n        this.controller_.addObserver(this);\r\n        // Force the update of observations.\r\n        this.controller_.refresh();\r\n    };\r\n    /**\r\n     * Stops observing provided element.\r\n     *\r\n     * @param {Element} target - Element to stop observing.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.unobserve = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is not being observed.\r\n        if (!observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.delete(target);\r\n        if (!observations.size) {\r\n            this.controller_.removeObserver(this);\r\n        }\r\n    };\r\n    /**\r\n     * Stops observing all elements.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.disconnect = function () {\r\n        this.clearActive();\r\n        this.observations_.clear();\r\n        this.controller_.removeObserver(this);\r\n    };\r\n    /**\r\n     * Collects observation instances the associated element of which has changed\r\n     * it's content rectangle.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.gatherActive = function () {\r\n        var _this = this;\r\n        this.clearActive();\r\n        this.observations_.forEach(function (observation) {\r\n            if (observation.isActive()) {\r\n                _this.activeObservations_.push(observation);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Invokes initial callback function with a list of ResizeObserverEntry\r\n     * instances collected from active resize observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.broadcastActive = function () {\r\n        // Do nothing if observer doesn't have active observations.\r\n        if (!this.hasActive()) {\r\n            return;\r\n        }\r\n        var ctx = this.callbackCtx_;\r\n        // Create ResizeObserverEntry instance for every active observation.\r\n        var entries = this.activeObservations_.map(function (observation) {\r\n            return new ResizeObserverEntry(observation.target, observation.broadcastRect());\r\n        });\r\n        this.callback_.call(ctx, entries, ctx);\r\n        this.clearActive();\r\n    };\r\n    /**\r\n     * Clears the collection of active observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.clearActive = function () {\r\n        this.activeObservations_.splice(0);\r\n    };\r\n    /**\r\n     * Tells whether observer has active observations.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObserverSPI.prototype.hasActive = function () {\r\n        return this.activeObservations_.length > 0;\r\n    };\r\n    return ResizeObserverSPI;\r\n}());\n\n// Registry of internal observers. If WeakMap is not available use current shim\r\n// for the Map collection as it has all required methods and because WeakMap\r\n// can't be fully polyfilled anyway.\r\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\r\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\r\nvar ResizeObserver = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback that is invoked when\r\n     *      dimensions of the observed elements change.\r\n     */\r\n    function ResizeObserver(callback) {\r\n        if (!(this instanceof ResizeObserver)) {\r\n            throw new TypeError('Cannot call a class as a function.');\r\n        }\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        var controller = ResizeObserverController.getInstance();\r\n        var observer = new ResizeObserverSPI(callback, controller, this);\r\n        observers.set(this, observer);\r\n    }\r\n    return ResizeObserver;\r\n}());\r\n// Expose public methods of ResizeObserver.\r\n[\r\n    'observe',\r\n    'unobserve',\r\n    'disconnect'\r\n].forEach(function (method) {\r\n    ResizeObserver.prototype[method] = function () {\r\n        var _a;\r\n        return (_a = observers.get(this))[method].apply(_a, arguments);\r\n    };\r\n});\n\nvar index = (function () {\r\n    // Export existing implementation if available.\r\n    if (typeof global$1.ResizeObserver !== 'undefined') {\r\n        return global$1.ResizeObserver;\r\n    }\r\n    return ResizeObserver;\r\n})();\n\nexport default index;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import * as React from 'react';\nimport useLatest from '@react-hook/latest';\nimport useEvent from '@react-hook/event';\nimport { useThrottleCallback } from '@react-hook/throttle';\n\n/**\n * A hook that creates a callback for scrolling to a specific index in\n * the \"items\" array.\n *\n * @param positioner A positioner created by the `usePositioner()` hook\n * @param options Configuration options\n */\nexport function useScrollToIndex(positioner, options) {\n  var _latestOptions$curren;\n\n  const {\n    align = 'top',\n    element = typeof window !== 'undefined' && window,\n    offset = 0,\n    height = typeof window !== 'undefined' ? window.innerHeight : 0\n  } = options;\n  const latestOptions = useLatest({\n    positioner,\n    element,\n    align,\n    offset,\n    height\n  });\n  const getTarget = React.useRef(() => {\n    const latestElement = latestOptions.current.element;\n    return latestElement && 'current' in latestElement ? latestElement.current : latestElement;\n  }).current;\n  const [state, dispatch] = React.useReducer((state, action) => {\n    const nextState = {\n      position: state.position,\n      index: state.index,\n      prevTop: state.prevTop\n    };\n    /* istanbul ignore next */\n\n    if (action.type === 'scrollToIndex') {\n      var _action$value;\n\n      return {\n        position: latestOptions.current.positioner.get((_action$value = action.value) !== null && _action$value !== void 0 ? _action$value : -1),\n        index: action.value,\n        prevTop: void 0\n      };\n    } else if (action.type === 'setPosition') {\n      nextState.position = action.value;\n    } else if (action.type === 'setPrevTop') {\n      nextState.prevTop = action.value;\n    } else if (action.type === 'reset') {\n      return defaultState;\n    }\n\n    return nextState;\n  }, defaultState);\n  const throttledDispatch = useThrottleCallback(dispatch, 15); // If we find the position along the way we can immediately take off\n  // to the correct spot.\n\n  useEvent(getTarget(), 'scroll', () => {\n    if (!state.position && state.index) {\n      const position = latestOptions.current.positioner.get(state.index);\n\n      if (position) {\n        dispatch({\n          type: 'setPosition',\n          value: position\n        });\n      }\n    }\n  }); // If the top changes out from under us in the case of dynamic cells, we\n  // want to keep following it.\n\n  const currentTop = state.index !== void 0 && ((_latestOptions$curren = latestOptions.current.positioner.get(state.index)) === null || _latestOptions$curren === void 0 ? void 0 : _latestOptions$curren.top);\n  React.useEffect(() => {\n    const target = getTarget();\n    if (!target) return;\n    const {\n      height,\n      align,\n      offset,\n      positioner\n    } = latestOptions.current;\n\n    if (state.position) {\n      let scrollTop = state.position.top;\n\n      if (align === 'bottom') {\n        scrollTop = scrollTop - height + state.position.height;\n      } else if (align === 'center') {\n        scrollTop -= (height - state.position.height) / 2;\n      }\n\n      target.scrollTo(0, Math.max(0, scrollTop += offset)); // Resets state after 400ms, an arbitrary time I determined to be\n      // still visually pleasing if there is a slow network reply in dynamic\n      // cells\n\n      let didUnsubscribe = false;\n      const timeout = setTimeout(() => !didUnsubscribe && dispatch({\n        type: 'reset'\n      }), 400);\n      return () => {\n        didUnsubscribe = true;\n        clearTimeout(timeout);\n      };\n    } else if (state.index !== void 0) {\n      // Estimates the top based upon the average height of current cells\n      let estimatedTop = positioner.shortestColumn() / positioner.size() * state.index;\n      if (state.prevTop) estimatedTop = Math.max(estimatedTop, state.prevTop + height);\n      target.scrollTo(0, estimatedTop);\n      throttledDispatch({\n        type: 'setPrevTop',\n        value: estimatedTop\n      });\n    }\n  }, [currentTop, state, latestOptions, getTarget, throttledDispatch]);\n  return React.useRef(index => {\n    dispatch({\n      type: 'scrollToIndex',\n      value: index\n    });\n  }).current;\n}\nconst defaultState = {\n  index: void 0,\n  position: void 0,\n  prevTop: void 0\n};","import { useScroller } from './use-scroller';\nimport { useMasonry } from './use-masonry';\n\n/**\n * A heavily-optimized component that updates `useMasonry()` when the scroll position of the browser `window`\n * changes. This bare-metal component is used by `<Masonry>` under the hood.\n */\nexport function MasonryScroller(props) {\n  // We put this in its own layer because it's the thing that will trigger the most updates\n  // and we don't want to slower ourselves by cycling through all the functions, objects, and effects\n  // of other hooks\n  const {\n    scrollTop,\n    isScrolling\n  } = useScroller(props.offset, props.scrollFps); // This is an update-heavy phase and while we could just Object.assign here,\n  // it is way faster to inline and there's a relatively low hit to he bundle\n  // size.\n\n  return useMasonry({\n    scrollTop,\n    isScrolling,\n    positioner: props.positioner,\n    resizeObserver: props.resizeObserver,\n    items: props.items,\n    onRender: props.onRender,\n    as: props.as,\n    id: props.id,\n    className: props.className,\n    style: props.style,\n    role: props.role,\n    tabIndex: props.tabIndex,\n    containerRef: props.containerRef,\n    itemAs: props.itemAs,\n    itemStyle: props.itemStyle,\n    itemHeightEstimate: props.itemHeightEstimate,\n    itemKey: props.itemKey,\n    overscanBy: props.overscanBy,\n    height: props.height,\n    render: props.render\n  });\n}\n\nif (typeof process !== 'undefined' && process.env.NODE_ENV !== 'production') {\n  MasonryScroller.displayName = 'MasonryScroller';\n}","import * as React from 'react';\nconst __reactCreateElement__ = React.createElement;\nimport trieMemoize from 'trie-memoize';\nimport OneKeyMap from '@essentials/one-key-map';\nimport memoizeOne from '@essentials/memoize-one';\nimport useLatest from '@react-hook/latest';\nimport { elementsCache } from './elements-cache';\nimport { useForceUpdate } from './use-force-update';\n\n/**\n * This hook handles the render phases of the masonry layout and returns the grid as a React element.\n *\n * @param options Options for configuring the masonry layout renderer. See `UseMasonryOptions`.\n */\nexport function useMasonry({\n  // Measurement and layout\n  positioner,\n  resizeObserver,\n  // Grid items\n  items,\n  // Container props\n  as: ContainerComponent = 'div',\n  id,\n  className,\n  style,\n  role = 'grid',\n  tabIndex = 0,\n  containerRef,\n  // Item props\n  itemAs: ItemComponent = 'div',\n  itemStyle,\n  itemHeightEstimate = 300,\n  itemKey = defaultGetItemKey,\n  // Rendering props\n  overscanBy = 2,\n  scrollTop,\n  isScrolling,\n  height,\n  render: RenderComponent,\n  onRender\n}) {\n  let startIndex = 0;\n  let stopIndex;\n  const forceUpdate = useForceUpdate();\n  const setItemRef = getRefSetter(positioner, resizeObserver);\n  const itemCount = items.length;\n  const {\n    columnWidth,\n    columnCount,\n    range,\n    estimateHeight,\n    size,\n    shortestColumn\n  } = positioner;\n  const measuredCount = size();\n  const shortestColumnSize = shortestColumn();\n  const children = [];\n  const itemRole = role + 'item';\n  const storedOnRender = useLatest(onRender);\n  overscanBy = height * overscanBy;\n  const rangeEnd = scrollTop + overscanBy;\n  const needsFreshBatch = shortestColumnSize < rangeEnd && measuredCount < itemCount;\n  range( // We overscan in both directions because users scroll both ways,\n  // though one must admit scrolling down is more common and thus\n  // we only overscan by half the downward overscan amount\n  Math.max(0, scrollTop - overscanBy / 2), rangeEnd, (index, left, top) => {\n    const data = items[index];\n    const key = itemKey(data, index);\n    const phaseTwoStyle = {\n      top,\n      left,\n      width: columnWidth,\n      writingMode: 'horizontal-tb',\n      position: 'absolute'\n    };\n    /* istanbul ignore next */\n\n    if (typeof process !== 'undefined' && process.env.NODE_ENV !== 'production') {\n      throwWithoutData(data, index);\n    }\n\n    children.push( /*#__PURE__*/__reactCreateElement__(ItemComponent, {\n      key: key,\n      ref: setItemRef(index),\n      role: itemRole,\n      style: typeof itemStyle === 'object' && itemStyle !== null ? Object.assign({}, phaseTwoStyle, itemStyle) : phaseTwoStyle\n    }, createRenderElement(RenderComponent, index, data, columnWidth)));\n\n    if (stopIndex === void 0) {\n      startIndex = index;\n      stopIndex = index;\n    } else {\n      startIndex = Math.min(startIndex, index);\n      stopIndex = Math.max(stopIndex, index);\n    }\n  });\n\n  if (needsFreshBatch) {\n    const batchSize = Math.min(itemCount - measuredCount, Math.ceil((scrollTop + overscanBy - shortestColumnSize) / itemHeightEstimate * columnCount));\n    let index = measuredCount;\n    const phaseOneStyle = getCachedSize(columnWidth);\n\n    for (; index < measuredCount + batchSize; index++) {\n      const data = items[index];\n      const key = itemKey(data, index);\n      /* istanbul ignore next */\n\n      if (typeof process !== 'undefined' && process.env.NODE_ENV !== 'production') {\n        throwWithoutData(data, index);\n      }\n\n      children.push( /*#__PURE__*/__reactCreateElement__(ItemComponent, {\n        key: key,\n        ref: setItemRef(index),\n        role: itemRole,\n        style: typeof itemStyle === 'object' ? Object.assign({}, phaseOneStyle, itemStyle) : phaseOneStyle\n      }, createRenderElement(RenderComponent, index, data, columnWidth)));\n    }\n  } // Calls the onRender callback if the rendered indices changed\n\n\n  React.useEffect(() => {\n    if (typeof storedOnRender.current === 'function' && stopIndex !== void 0) storedOnRender.current(startIndex, stopIndex, items);\n    didEverMount = '1';\n  }, [startIndex, stopIndex, items, storedOnRender]); // If we needed a fresh batch we should reload our components with the measured\n  // sizes\n\n  React.useEffect(() => {\n    if (needsFreshBatch) forceUpdate(); // eslint-disable-next-line\n  }, [needsFreshBatch]); // gets the container style object based upon the estimated height and whether or not\n  // the page is being scrolled\n\n  const containerStyle = getContainerStyle(isScrolling, estimateHeight(itemCount, itemHeightEstimate));\n  return /*#__PURE__*/__reactCreateElement__(ContainerComponent, {\n    ref: containerRef,\n    key: didEverMount,\n    id: id,\n    role: role,\n    className: className,\n    tabIndex: tabIndex,\n    style: typeof style === 'object' ? assignUserStyle(containerStyle, style) : containerStyle,\n    children: children\n  });\n}\n/* istanbul ignore next */\n\nfunction throwWithoutData(data, index) {\n  if (!data) {\n    throw new Error(\"No data was found at index: \" + index + \"\\n\\n\" + \"This usually happens when you've mutated or changed the \\\"items\\\" array in a \" + \"way that makes it shorter than the previous \\\"items\\\" array. Masonic knows nothing \" + \"about your underlying data and when it caches cell positions, it assumes you aren't \" + \"mutating the underlying \\\"items\\\".\\n\\n\" + \"See https://codesandbox.io/s/masonic-w-react-router-example-2b5f9?file=/src/index.js for \" + \"an example that gets around this limitations. For advanced implementations, see \" + \"https://codesandbox.io/s/masonic-w-react-router-and-advanced-config-example-8em42?file=/src/index.js\\n\\n\" + \"If this was the result of your removing an item from your \\\"items\\\", see this issue: \" + \"https://github.com/jaredLunde/masonic/issues/12\");\n  }\n} // This is for triggering a remount after SSR has loaded in the client w/ hydrate()\n\n\nlet didEverMount = '0';\n//\n// Render-phase utilities\n// ~5.5x faster than createElement without the memo\nconst createRenderElement = /*#__PURE__*/trieMemoize([OneKeyMap, {}, WeakMap, OneKeyMap], (RenderComponent, index, data, columnWidth) => /*#__PURE__*/__reactCreateElement__(RenderComponent, {\n  index: index,\n  data: data,\n  width: columnWidth\n}));\nconst getContainerStyle = /*#__PURE__*/memoizeOne((isScrolling, estimateHeight) => ({\n  position: 'relative',\n  width: '100%',\n  maxWidth: '100%',\n  height: Math.ceil(estimateHeight),\n  maxHeight: Math.ceil(estimateHeight),\n  willChange: isScrolling ? 'contents' : void 0,\n  pointerEvents: isScrolling ? 'none' : void 0\n}));\n\nconst cmp2 = (args, pargs) => args[0] === pargs[0] && args[1] === pargs[1];\n\nconst assignUserStyle = /*#__PURE__*/memoizeOne((containerStyle, userStyle) => Object.assign({}, containerStyle, userStyle), // @ts-ignore\ncmp2);\n\nfunction defaultGetItemKey(_, i) {\n  return i;\n} // the below memoizations for for ensuring shallow equal is reliable for pure\n// component children\n\n\nconst getCachedSize = /*#__PURE__*/memoizeOne(width => ({\n  width,\n  zIndex: -1000,\n  visibility: 'hidden',\n  position: 'absolute',\n  writingMode: 'horizontal-tb'\n}), (args, pargs) => args[0] === pargs[0]);\nconst getRefSetter = /*#__PURE__*/memoizeOne((positioner, resizeObserver) => index => el => {\n  if (el === null) return;\n\n  if (resizeObserver) {\n    resizeObserver.observe(el);\n    elementsCache.set(el, index);\n  }\n\n  if (positioner.get(index) === void 0) positioner.set(index, el.offsetHeight);\n}, // @ts-ignore\ncmp2);","const memoOne = (fn, areEqual) => {\n  const equal = areEqual || defaultAreEqual;\n  let args, value;\n  return function () {\n    return !!args && equal(arguments, args) ? value : value = fn.apply(null, args = arguments);\n  };\n};\n\nexport default memoOne;\n\nconst defaultAreEqual = (current, prev) => current[0] === prev[0] && current[1] === prev[1] && current[2] === prev[2] && current[3] === prev[3];","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * var result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\n\nexport default function startOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import { useThrottle } from '@react-hook/throttle';\nimport useEvent from '@react-hook/event';\nconst win = typeof window === 'undefined' ? null : window;\n\nconst getScrollY = () => win.scrollY !== void 0 ? win.scrollY : win.pageYOffset === void 0 ? 0 : win.pageYOffset;\n\nexport const useWindowScroll = (fps = 30) => {\n  const state = useThrottle(typeof window === 'undefined' ? 0 : getScrollY, fps, true);\n  useEvent(win, 'scroll', () => state[1](getScrollY()));\n  return state[0];\n};\nexport default useWindowScroll;","let u = 'undefined',\n    win = typeof window !== u ? window : {},\n    p = typeof performance !== u ? performance : Date,\n    now = () => p.now(),\n    af = 'AnimationFrame',\n    Caf = 'cancel' + af,\n    Raf = 'request' + af,\n    raf = win[Raf] && /*#__PURE__*/win[Raf].bind(win),\n    caf = win[Caf] && /*#__PURE__*/win[Caf].bind(win);\n\nfunction _ref(h) {\n  return clearTimeout(h);\n}\n\nif (!raf || !caf) {\n  let lastTime = 0;\n\n  raf = callback => {\n    let curr = now(),\n        next = Math.max(lastTime + 1000 / 60, curr);\n    return setTimeout(() => {\n      callback(lastTime = next);\n    }, next - curr);\n  };\n\n  caf = _ref;\n}\n\nexport { raf, caf, now };","/**\n * Copyright 2011, Joe Lambert.\n * Free to use under the MIT license.\n * http://www.opensource.org/licenses/mit-license.php\n **/\nimport { raf, caf, now } from '@essentials/raf';\nexport const clearRequestTimeout = handle => {\n  caf(handle.v || -1);\n};\nexport const requestTimeout = (fn, ms) => {\n  const start = now(),\n        handle = {};\n\n  const loop = () => {\n    now() - start >= ms ? fn.call(null) : handle.v = raf(loop);\n  };\n\n  handle.v = raf(loop);\n  return handle;\n};\nexport default requestTimeout;","import * as React from 'react';\nimport useScrollPosition from '@react-hook/window-scroll';\nimport { requestTimeout, clearRequestTimeout } from '@essentials/request-timeout';\n/**\n * A hook for tracking whether the `window` is currently being scrolled and it's scroll position on\n * the y-axis. These values are used for determining which grid cells to render and when\n * to add styles to the masonry container that maximize scroll performance.\n *\n * @param offset The vertical space in pixels between the top of the grid container and the top\n *  of the browser `document.documentElement`.\n * @param fps This determines how often (in frames per second) to update the scroll position of the\n *  browser `window` in state, and as a result the rate the masonry grid recalculates its visible cells.\n *  The default value of `12` has been very reasonable in my own testing, but if you have particularly\n *  heavy `render` components it may be prudent to reduce this number.\n */\n\nexport function useScroller(offset = 0, fps = 12) {\n  const scrollTop = useScrollPosition(fps);\n  const [isScrolling, setIsScrolling] = React.useState(false);\n  const didMount = React.useRef(0);\n\n  function _ref() {\n    // This is here to prevent premature bail outs while maintaining high resolution\n    // unsets. Without it there will always bee a lot of unnecessary DOM writes to style.\n    setIsScrolling(false);\n  }\n\n  React.useEffect(() => {\n    if (didMount.current === 1) setIsScrolling(true);\n    const to = requestTimeout(_ref, 40 + 1000 / fps);\n    didMount.current = 1;\n    return () => clearRequestTimeout(to);\n  }, [fps, scrollTop]);\n  return {\n    scrollTop: Math.max(0, scrollTop - offset),\n    isScrolling\n  };\n}","var rafSchd = function rafSchd(fn) {\n  var lastArgs = [];\n  var frameId = null;\n\n  var wrapperFn = function wrapperFn() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    lastArgs = args;\n\n    if (frameId) {\n      return;\n    }\n\n    frameId = requestAnimationFrame(function () {\n      frameId = null;\n      fn.apply(void 0, lastArgs);\n    });\n  };\n\n  wrapperFn.cancel = function () {\n    if (!frameId) {\n      return;\n    }\n\n    cancelAnimationFrame(frameId);\n    frameId = null;\n  };\n\n  return wrapperFn;\n};\n\nexport default rafSchd;\n","import * as React from 'react';\nimport trieMemoize from 'trie-memoize';\nimport ResizeObserver from 'resize-observer-polyfill';\nimport rafSchd from 'raf-schd';\nimport { elementsCache } from './elements-cache';\nimport { useForceUpdate } from './use-force-update';\n\n/**\n * Creates a resize observer that forces updates to the grid cell positions when mutations are\n * made to cells affecting their height.\n *\n * @param positioner The masonry cell positioner created by the `usePositioner()` hook.\n */\nexport function useResizeObserver(positioner) {\n  const forceUpdate = useForceUpdate();\n  const resizeObserver = createResizeObserver(positioner, forceUpdate); // Cleans up the resize observers when they change or the\n  // component unmounts\n\n  function _ref() {\n    return resizeObserver.disconnect();\n  }\n\n  React.useEffect(() => _ref, [resizeObserver]);\n  return resizeObserver;\n}\n/**\n * Creates a resize observer that fires an `updater` callback whenever the height of\n * one or many cells change. The `useResizeObserver()` hook is using this under the hood.\n *\n * @param positioner A cell positioner created by the `usePositioner()` hook or the `createPositioner()` utility\n * @param updater A callback that fires whenever one or many cell heights change.\n */\n\nexport const createResizeObserver = /*#__PURE__*/trieMemoize([WeakMap], // TODO: figure out a way to test this\n\n/* istanbul ignore next */\n(positioner, updater) => {\n  const handleEntries = rafSchd(entries => {\n    const updates = [];\n    let i = 0;\n\n    for (; i < entries.length; i++) {\n      const entry = entries[i];\n      const height = entry.target.offsetHeight;\n\n      if (height > 0) {\n        const index = elementsCache.get(entry.target);\n\n        if (index !== void 0) {\n          const position = positioner.get(index);\n          if (position !== void 0 && height !== position.height) updates.push(index, height);\n        }\n      }\n    }\n\n    if (updates.length > 0) {\n      // Updates the size/positions of the cell with the resize\n      // observer updates\n      positioner.update(updates);\n      updater(updates);\n    }\n  });\n  const ro = new ResizeObserver(handleEntries); // Overrides the original disconnect to include cancelling handling the entries.\n  // Ideally this would be its own method but that would result in a breaking\n  // change.\n\n  const disconnect = ro.disconnect.bind(ro);\n\n  ro.disconnect = () => {\n    disconnect();\n    handleEntries.cancel();\n  };\n\n  return ro;\n});","import * as React from 'react';\nimport useLatest from '@react-hook/latest';\nexport const useDebounceCallback = (callback, wait = 100, leading = false) => {\n  const storedCallback = useLatest(callback);\n  const timeout = React.useRef();\n  const deps = [wait, leading, storedCallback]; // Cleans up pending timeouts when the deps change\n\n  function _ref() {\n    timeout.current && clearTimeout(timeout.current);\n    timeout.current = void 0;\n  }\n\n  React.useEffect(() => _ref, deps);\n\n  function _ref2() {\n    timeout.current = void 0;\n  }\n\n  return React.useCallback(function () {\n    // eslint-disable-next-line prefer-rest-params\n    const args = arguments;\n    const {\n      current\n    } = timeout; // Calls on leading edge\n\n    if (current === void 0 && leading) {\n      timeout.current = setTimeout(_ref2, wait); // eslint-disable-next-line prefer-spread\n\n      return storedCallback.current.apply(null, args);\n    } // Clear the timeout every call and start waiting again\n\n\n    current && clearTimeout(current); // Waits for `wait` before invoking the callback\n\n    timeout.current = setTimeout(() => {\n      timeout.current = void 0;\n      storedCallback.current.apply(null, args);\n    }, wait);\n  }, deps);\n};\nexport const useDebounce = (initialState, wait, leading) => {\n  const state = React.useState(initialState);\n  return [state[0], useDebounceCallback(state[1], wait, leading)];\n};","import { useDebounce } from '@react-hook/debounce';\nimport useEvent from '@react-hook/event';\nconst emptyObj = {};\nconst win = typeof window === 'undefined' ? null : window;\n\nconst getSize = () => [document.documentElement.clientWidth, document.documentElement.clientHeight];\n\nexport const useWindowSize = (options = emptyObj) => {\n  const {\n    wait,\n    leading,\n    initialWidth = 0,\n    initialHeight = 0\n  } = options;\n  const [size, setDebouncedSize] = useDebounce(\n  /* istanbul ignore next */\n  typeof document === 'undefined' ? [initialWidth, initialHeight] : getSize, wait, leading);\n\n  const setSize = () => setDebouncedSize(getSize);\n\n  useEvent(win, 'resize', setSize);\n  useEvent(win, 'orientationchange', setSize);\n  return size;\n};\nexport const useWindowHeight = options => useWindowSize(options)[1];\nexport const useWindowWidth = options => useWindowSize(options)[0];","class OneKeyMap {\n  constructor() {\n    this.set = void 0;\n    this.get = void 0;\n    let key, val;\n\n    this.get = k => k === key ? val : void 0;\n\n    this.set = (k, v) => {\n      key = k;\n      val = v;\n    };\n  }\n\n}\n\nexport default OneKeyMap;","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import * as React from 'react';\nconst __reactCreateElement__ = React.createElement;\nimport { useWindowSize } from '@react-hook/window-size';\nimport { MasonryScroller } from './masonry-scroller';\nimport { useContainerPosition } from './use-container-position';\nimport { useResizeObserver } from './use-resize-observer';\nimport { usePositioner } from './use-positioner';\nimport { useScrollToIndex } from './use-scroll-to-index';\n\n/**\n * A \"batteries included\" masonry grid which includes all of the implementation details below. This component is the\n * easiest way to get off and running in your app, before switching to more advanced implementations, if necessary.\n * It will change its column count to fit its container's width and will decide how many rows to render based upon\n * the height of the browser `window`.\n */\nexport function Masonry(props) {\n  const containerRef = React.useRef(null);\n  const windowSize = useWindowSize({\n    initialWidth: props.ssrWidth,\n    initialHeight: props.ssrHeight\n  });\n  const containerPos = useContainerPosition(containerRef, windowSize);\n  const nextProps = Object.assign({\n    offset: containerPos.offset,\n    width: containerPos.width || windowSize[0],\n    height: windowSize[1],\n    containerRef\n  }, props);\n  nextProps.positioner = usePositioner(nextProps);\n  nextProps.resizeObserver = useResizeObserver(nextProps.positioner);\n  const scrollToIndex = useScrollToIndex(nextProps.positioner, {\n    height: nextProps.height,\n    offset: containerPos.offset,\n    align: typeof props.scrollToIndex === 'object' ? props.scrollToIndex.align : void 0\n  });\n  const index = props.scrollToIndex && (typeof props.scrollToIndex === 'number' ? props.scrollToIndex : props.scrollToIndex.index);\n  React.useEffect(() => {\n    if (index !== void 0) scrollToIndex(index);\n  }, [index, scrollToIndex]);\n  return __reactCreateElement__(MasonryScroller, nextProps);\n}\n\nif (typeof process !== 'undefined' && process.env.NODE_ENV !== 'production') {\n  Masonry.displayName = 'Masonry';\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isFuture\n * @category Common Helpers\n * @summary Is the given date in the future?\n * @pure false\n *\n * @description\n * Is the given date in the future?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in the future\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 31 December 2014 in the future?\n * var result = isFuture(new Date(2014, 11, 31))\n * //=> true\n */\n\nexport default function isFuture(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getTime() > Date.now();\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addDays from '../addDays/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subDays\n * @category Day Helpers\n * @summary Subtract the specified number of days from the given date.\n *\n * @description\n * Subtract the specified number of days from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the days subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 10 days from 1 September 2014:\n * var result = subDays(new Date(2014, 8, 1), 10)\n * //=> Fri Aug 22 2014 00:00:00\n */\n\nexport default function subDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addDays(dirtyDate, -amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMonths from '../addMonths/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subMonths\n * @category Month Helpers\n * @summary Subtract the specified number of months from the given date.\n *\n * @description\n * Subtract the specified number of months from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the months subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 5 months from 1 February 2015:\n * var result = subMonths(new Date(2015, 1, 1), 5)\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function subMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMonths(dirtyDate, -amount);\n}","import subDays from '../subDays/index.js';\nimport subMonths from '../subMonths/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\n/**\n * @name sub\n * @category Common Helpers\n * @summary Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\n *\n * @description\n * Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Duration} duration - the object with years, months, weeks, days, hours, minutes and seconds to be subtracted\n *\n * | Key     | Description                        |\n * |---------|------------------------------------|\n * | years   | Amount of years to be subtracted   |\n * | months  | Amount of months to be subtracted  |\n * | weeks   | Amount of weeks to be subtracted   |\n * | days    | Amount of days to be subtracted    |\n * | hours   | Amount of hours to be subtracted   |\n * | minutes | Amount of minutes to be subtracted |\n * | seconds | Amount of seconds to be subtracted |\n *\n * All values default to 0\n *\n * @returns {Date} the new date with the seconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract the following duration from 15 June 2017 15:29:20\n * const result = sub(new Date(2017, 5, 15, 15, 29, 20), {\n *   years: 2,\n *   months: 9,\n *   weeks: 1,\n *   days: 7,\n *   hours: 5,\n *   minutes: 9,\n *   seconds: 30\n * })\n * //=> Mon Sep 1 2014 10:19:50\n */\n\nexport default function sub(dirtyDate, duration) {\n  requiredArgs(2, arguments);\n  if (!duration || typeof duration !== 'object') return new Date(NaN);\n  var years = 'years' in duration ? toInteger(duration.years) : 0;\n  var months = 'months' in duration ? toInteger(duration.months) : 0;\n  var weeks = 'weeks' in duration ? toInteger(duration.weeks) : 0;\n  var days = 'days' in duration ? toInteger(duration.days) : 0;\n  var hours = 'hours' in duration ? toInteger(duration.hours) : 0;\n  var minutes = 'minutes' in duration ? toInteger(duration.minutes) : 0;\n  var seconds = 'seconds' in duration ? toInteger(duration.seconds) : 0; // Subtract years and months\n\n  var dateWithoutMonths = subMonths(toDate(dirtyDate), months + years * 12); // Subtract weeks and days\n\n  var dateWithoutDays = subDays(dateWithoutMonths, days + weeks * 7); // Subtract hours, minutes and seconds\n\n  var minutestoSub = minutes + hours * 60;\n  var secondstoSub = seconds + minutestoSub * 60;\n  var mstoSub = secondstoSub * 1000;\n  var finalDate = new Date(dateWithoutDays.getTime() - mstoSub);\n  return finalDate;\n}","import getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport startOfDay from '../startOfDay/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_DAY = 86400000;\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar days\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * var result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * var result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\n\nexport default function differenceInCalendarDays(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var startOfDayLeft = startOfDay(dirtyDateLeft);\n  var startOfDayRight = startOfDay(dirtyDateRight);\n  var timestampLeft = startOfDayLeft.getTime() - getTimezoneOffsetInMilliseconds(startOfDayLeft);\n  var timestampRight = startOfDayRight.getTime() - getTimezoneOffsetInMilliseconds(startOfDayRight); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a day is not constant\n  // (e.g. it's different in the day of the daylight saving time clock shift)\n\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY);\n}","import toDate from '../toDate/index.js';\nimport differenceInCalendarDays from '../differenceInCalendarDays/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js'; // Like `compareAsc` but uses local time not UTC, which is needed\n// for accurate equality comparisons of UTC timestamps that end up\n// having the same representation in local time, e.g. one hour before\n// DST ends vs. the instant that DST ends.\n\nfunction compareLocalAsc(dateLeft, dateRight) {\n  var diff = dateLeft.getFullYear() - dateRight.getFullYear() || dateLeft.getMonth() - dateRight.getMonth() || dateLeft.getDate() - dateRight.getDate() || dateLeft.getHours() - dateRight.getHours() || dateLeft.getMinutes() - dateRight.getMinutes() || dateLeft.getSeconds() - dateRight.getSeconds() || dateLeft.getMilliseconds() - dateRight.getMilliseconds();\n\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1; // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}\n/**\n * @name differenceInDays\n * @category Day Helpers\n * @summary Get the number of full days between the given dates.\n *\n * @description\n * Get the number of full day periods between two dates. Fractional days are\n * truncated towards zero.\n *\n * One \"full day\" is the distance between a local time in one day to the same\n * local time on the next or previous day. A full day can sometimes be less than\n * or more than 24 hours if a daylight savings change happens between two dates.\n *\n * To ignore DST and only measure exact 24-hour periods, use this instead:\n * `Math.floor(differenceInHours(dateLeft, dateRight)/24)|0`.\n *\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full days according to the local timezone\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * var result = differenceInDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 365\n * // How many full days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * var result = differenceInDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 0\n * // How many full days are between\n * // 1 March 2020 0:00 and 1 June 2020 0:00 ?\n * // Note: because local time is used, the\n * // result will always be 92 days, even in\n * // time zones where DST starts and the\n * // period has only 92*24-1 hours.\n * var result = differenceInDays(\n *   new Date(2020, 5, 1),\n *   new Date(2020, 2, 1)\n * )\n//=> 92\n */\n\n\nexport default function differenceInDays(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareLocalAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarDays(dateLeft, dateRight));\n  dateLeft.setDate(dateLeft.getDate() - sign * difference); // Math.abs(diff in full days - diff in calendar days) === 1 if last calendar day is not full\n  // If so, result must be decreased by 1 in absolute value\n\n  var isLastDayNotFull = compareLocalAsc(dateLeft, dateRight) === -sign;\n  var result = sign * (difference - isLastDayNotFull); // Prevent negative zero\n\n  return result === 0 ? 0 : result;\n}"],"sourceRoot":""}